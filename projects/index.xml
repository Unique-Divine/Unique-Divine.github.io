<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Unique Divine</title>
    <link>https://unique-divine.github.io/projects/</link>
    <description>Recent content in Projects on Unique Divine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright Â© 2020</copyright>
    <lastBuildDate>Sun, 05 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://unique-divine.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Click-Through Rate Prediction with Stochastic Gradient Descent</title>
      <link>https://unique-divine.github.io/projects/ctr-prediction/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/ctr-prediction/</guid>
      <description>CTR-Prediction-with-Stochastic-Gradient-Descent Motivation: Why do this? The goal of this project is to predict whether a dataset of advertisements will be clicked or not. In solving this problem, I use a stochastic gradient descent algorithm called Pegasos, which is commonly used for click-through rate (CTR) predictions.
If you only want to read the notebook without downloading or running anything, here&amp;rsquo;s a link to nbviewer: CTR-Prediction-with-Stochastic-Gradient-Descent.ipynb
Tools utilized: Python (NumPy, Pandas, Matplotlib), Pegasos, Logistic Regression, Support Vector Machines Contents:  Dataset Description Jupyter Notebook Contents Demo / Usage Instructions  1.</description>
    </item>
    
    <item>
      <title>PyTorch Deep Learning Tutorial</title>
      <link>https://unique-divine.github.io/projects/algo_trading/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/algo_trading/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>Banknote Fraud Detection</title>
      <link>https://unique-divine.github.io/projects/banknote_fraud/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/banknote_fraud/</guid>
      <description>Banknote Fraud Detection - Decision Trees from Scratch Summary: The goal of this project was to develop accurate predictive models to solve a binary classification problem, detecting fraudulent banknotes (counterfeit money).
To view the notebook without downloading anything, go here.
Data Description: The data was downloaded from this source.
 Extracted from images were taken from genuine and forged banknote-like specimens. For digitization, an industrial camera usually used for print inspection was used.</description>
    </item>
    
    <item>
      <title>Neural Networks for Gravitational Lens Modeling</title>
      <link>https://unique-divine.github.io/projects/nn-grav_lens/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/nn-grav_lens/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>