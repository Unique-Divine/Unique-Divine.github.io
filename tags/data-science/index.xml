<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data science on Unique Divine</title>
    <link>https://unique-divine.github.io/tags/data-science/</link>
    <description>Recent content in data science on Unique Divine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2020</copyright>
    <lastBuildDate>Sun, 05 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://unique-divine.github.io/tags/data-science/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Click-Through Rate Prediction with Stochastic Gradient Descent</title>
      <link>https://unique-divine.github.io/projects/ctr-prediction/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/ctr-prediction/</guid>
      <description>CTR-Prediction-with-Stochastic-Gradient-Descent Motivation: Why do this? The goal of this project is to predict whether a dataset of advertisements will be clicked or not. In solving this problem, I use a stochastic gradient descent algorithm called Pegasos, which is commonly used for click-through rate (CTR) predictions.
If you only want to read the notebook without downloading or running anything, here&amp;rsquo;s a link to nbviewer: CTR-Prediction-with-Stochastic-Gradient-Descent.ipynb
Tools utilized: Python (NumPy, Pandas, Matplotlib), Pegasos, Logistic Regression, Support Vector Machines Contents:  Dataset Description Jupyter Notebook Contents Demo / Usage Instructions  1.</description>
    </item>
    
    <item>
      <title>PyTorch Deep Learning Tutorial</title>
      <link>https://unique-divine.github.io/projects/algo_trading/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/algo_trading/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>Breaking Into Data Science</title>
      <link>https://unique-divine.github.io/post/ai/breaking-into-ds/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/post/ai/breaking-into-ds/</guid>
      <description>This post comes at a time where I, myself, am feeling the first-hire blues.
An overall sense of burnout, frustration, confusion.
I’ve gotten well acquainted with the phrases,
“We reget to inform you at this time…”,
“Although we were impressed with your interview/qualifications…”,
“[insert insincere compliment here]. Unfortunately, [insert rejection statement here] …”.
I heard somebody say a few weeks back to “teach the thing you want to learn”.` It seemed a bit paradoxical the first time I thought about it.</description>
    </item>
    
    <item>
      <title>Banknote Fraud Detection</title>
      <link>https://unique-divine.github.io/projects/banknote_fraud/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/banknote_fraud/</guid>
      <description>Banknote Fraud Detection - Decision Trees from Scratch Summary: The goal of this project was to develop accurate predictive models to solve a binary classification problem, detecting fraudulent banknotes (counterfeit money).
To view the notebook without downloading anything, go here.
Data Description: The data was downloaded from this source.
 Extracted from images were taken from genuine and forged banknote-like specimens. For digitization, an industrial camera usually used for print inspection was used.</description>
    </item>
    
    <item>
      <title>Neural Networks for Gravitational Lens Modeling</title>
      <link>https://unique-divine.github.io/projects/nn-grav_lens/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unique-divine.github.io/projects/nn-grav_lens/</guid>
      <description>Neural Networks for Gravitational Lens Modeling In this project, I use convolutional neural networks (with TensorFlow) to estimate the parameters of strong gravitational lenses, namely the coordinates of the center of the lens in two dimensions, the Einstein radius, and the complex ellipticities.
These parameters are important because they enable us to quantify the distortions of images due to gravitational lensing. The fact that the deflection of light due to gravitational lensing is dependent on the mass structure of the lens means that recovering these parameters effectively allows us to measure and characterize the distribution of mass.</description>
    </item>
    
  </channel>
</rss>